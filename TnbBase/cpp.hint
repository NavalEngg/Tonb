#define List_ACCESS(type, f, fp) register type* __restrict fp = (f).begin()
#define ScalarVGREAT
#define ScalarVSMALL
#define readScalar
#define List_FOR_ALL(f, i) register label i = (f).size(); while (i--) {
#define List_END_FOR_ALL  }
#define TEMPLATE 
#define forAll(list, i)
#define forAllReverse(list, i)
#define forAllIter(Container,container,iter) 
#define forAllConstIter(Container,container,iter) 
#define defineCompoundTypeName(Type, Name) 
#define addCompoundToRunTimeSelectionTable(Type, Name)
#define addToRunTimeSelectionTable(baseType,thisType,argNames) 
#define declareRunTimeSelectionTable(autoPtr,baseType,argNames,argList,parList)
#define defineRunTimeSelectionTable(baseType,argNames)
#define TypeName(TypeNameString) 